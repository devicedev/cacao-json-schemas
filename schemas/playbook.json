{
  "$id": "https://raw.githubusercontent.com/devicedev/cacao-json-schemas/main/schemas/playbook.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "playbook",
  "description": "CACAO playbooks are made up of six parts playbook metadata, the workflow logic, a list of object definitions used in the workflow logic (agents and targets), a list of extensions, a list of data markings, and a list of any digital signatures. Playbooks MAY refer to other playbooks in the workflow, similar to how programs refer to function calls or modules that comprise the program. The definition and normative requirements for all data types listed in the property table below and other property tables in this document can be found in Section 10.",
  "type": "object",
  "properties": {
    "type": {
      "type": "string",
      "description": "The value of this property MUST be 'playbook'.",
      "enum": ["playbook"]
    },
    "spec_version": {
      "type": "string",
      "description": "The version of the specification used to represent this playbook. The value of this property MUST be 'cacao-2.0' to represent the version of this specification.",
      "enum": ["cacao-2.0"]
    },
    "id": {
      "$ref": "data-types/identifier.json",
      "description": "A value that uniquely identifies the playbook. All playbooks with the same id are considered different versions of the same playbook and the version of the playbook is identified by its modified property."
    },
    "name": {
      "type": "string",
      "description": "A name for this playbook. Playbook names often follow a naming convention that is unique within an organization, community, or trust group and as such this name SHOULD be unique."
    },
    "description": {
      "type": "string",
      "description": "More details, context, and possibly an explanation about what this playbook does and tries to accomplish. Producers SHOULD populate this property."
    },
    "playbook_types": {
      "type": "array",
      "description": "A list of playbook types that specifies the operational roles that this playbook addresses. This property SHOULD be populated. \n\nThe values for this property SHOULD come from the 'playbook-type-ov' vocabulary (see section 3.1.1).",
      "items": {
        "$ref": "#/$defs/playbook-type-ov"
      }
    },
    "playbook_activities": {
      "type": "array",
      "description": "A list of activities pertaining to the playbook. This property SHOULD be populated. If the playbook_types property is populated and comes from the playbook-type-ov then this property MUST have at least one assigned activity. \n\nThis property allows an author to define more detailed descriptions for the various activities that a playbook performs. This property provides a much richer and verbose method to describe all aspects of a playbook than just the playbook_types property. \n\nThe values for this property SHOULD come from the 'playbook-activity-type-ov' vocabulary (see section 3.1.2). \n\nEach listed activity MUST be reflected in a CACAO workflow step object and that object MUST be included in the workflow property.",
      "items": {
        "$ref": "#/$defs/playbook-activity-type-ov"
      },
      "minItems": 1
    },
    "created": {
      "$ref": "data-types/timestamp.json",
      "description": "The time at which this playbook was originally created. The creator can use any time it deems most appropriate as the time the playbook was created, but it MUST be given to the nearest millisecond (exactly three digits after the decimal place in seconds). The created property MUST NOT be changed when creating a new version of the object."
    },
    "modified": {
      "$ref": "data-types/timestamp.json",
      "description": "The time that this particular version of the playbook was last modified. The creator can use any time it deems most appropriate as the time that this version of the playbook was modified, but it MUST be given to the nearest millisecond (exactly three digits after the decimal place in seconds). The modified property MUST be later than or equal to the value of the created property. If created and modified properties are the same, then this is the first version of the playbook."
    },
    "labels": {
      "type": "array",
      "description": "A set of terms, labels, or tags associated with this playbook. The values may be user, organization, or trust-group defined and their meaning is outside the scope of this specification.",
      "items": {
        "type": "string"
      },
      "minItems": 1
    },
    "playbook_variables": {
      "type": "object",
      "unevaluatedProperties": false,
      "description": "This property contains the global variables (see section 10.18.1 for information about variable scope) that can be used within the playbook, workflow steps (including conditional steps), commands, agents, and targets defined within the playbook. See section 10.18 for information about referencing variables. \n\nThe key for each entry in the dictionary MUST be a 'string' that uniquely identifies the variable. The value for each key MUST be a CACAO 'variable' data type (see section 10.18).",
      "patternProperties": {
        "^__[a-zA-Z_][a-zA-Z0-9_-]{0,199}__$": {
          "$ref": "data-types/variable.json"
        }
      }
    },
    "workflow_start": {
      "$ref": "data-types/identifier.json",
      "description": "The first workflow step included in the workflow property that MUST be executed when starting the workflow. \n\nThe ID MUST represent a CACAO workflow start step object and that object MUST be included in the workflow property. This property is an implementation helper so that the entire workflow does not need to be parsed to find the start step."
    },
    "workflow_exception": {
      "$ref": "data-types/identifier.json",
      "description": "The workflow step invoked whenever a playbook execution exception condition occurs. \n\nIf defined, the ID MUST represent a CACAO workflow step object and that object MUST be included in the workflow property."
    },
    "workflow": {
      "description": "The workflow property contains the processing logic for the playbook as workflow steps. All playbooks MUST contain at least the following three steps: a start step, an action/playbook-action step, and an end step. \n\nThe key for each entry in the dictionary MUST be an 'identifier' that uniquely identifies the workflow step (see section 10.10 for more information on identifiers). The value for each key MUST be a CACAO workflow step object (see section 4).",
      "type": "object",
      "unevaluatedProperties": false,
      "patternProperties": {
        "^action--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
          "$ref": "workflows/action.json"
        },
        "^end--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
          "$ref": "workflows/end.json"
        },
        "^if-condition--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
          "$ref": "workflows/if-condition.json"
        },
        "^parallel--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
          "$ref": "workflows/parallel.json"
        },
        "^playbook-action--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
          "$ref": "workflows/playbook-action.json"
        },
        "^start--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
          "$ref": "workflows/start.json"
        },
        "^switch-condition--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
          "$ref": "workflows/switch-condition.json"
        },
        "^while-condition--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
          "$ref": "workflows/while-condition.json"
        }
      }
    }
  },
  "required": [
    "type",
    "spec_version",
    "id",
    "name",
    "created_by",
    "playbook_types",
    "playbook_activities",
    "created",
    "modified",
    "workflow_start",
    "workflow"
  ],
  "unevaluatedProperties": false,
  "$defs": {
    "playbook-type-ov": {
      "enum": [
        "attack",
        "detection",
        "engagement",
        "investigation",
        "mitigation",
        "notification",
        "prevention",
        "remediation"
      ]
    },
    "playbook-activity-type-ov": {
      "enum": [
        "compose-content",
        "deliver-content",
        "identify-audience",
        "identify-channel",
        "scan-system",
        "match-indicator",
        "analyze-collected-data",
        "identify-indicators",
        "scan-vulnerabilities",
        "configure-systems",
        "restrict-access",
        "disconnect-system",
        "eliminate-risk",
        "revert-system",
        "restore-data",
        "restore-capabilities",
        "map-network",
        "identify-steps",
        "step-sequence",
        "prepare-engagement",
        "execute-operation",
        "analyze-engagement-results"
      ]
    },
    "industry-sector-ov": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "string",
          "enum": [
            "aerospace",
            "aviation",
            "agriculture",
            "automotive",
            "biotechnology",
            "chemical",
            "commercial",
            "consulting",
            "construction",
            "cosmetics",
            "critical-infrastructure",
            "dams",
            "defense",
            "education",
            "emergency-services",
            "energy",
            "non-renewable-energy",
            "renewable-energy",
            "media",
            "financial",
            "food",
            "gambling",
            "government",
            "local-government",
            "national-government",
            "regional-government",
            "public-services",
            "healthcare",
            "information-communications-technology",
            "electronics-hardware",
            "software",
            "telecommunications",
            "legal-services",
            "lodging",
            "manufacturing",
            "maritime",
            "metals",
            "mining",
            "non-profit",
            "humanitarian-aid",
            "human-rights",
            "nuclear",
            "petroleum",
            "pharmaceuticals",
            "research",
            "transportation",
            "logistics-shipping",
            "utilities",
            "video-game",
            "water"
          ]
        }
      ]
    }
  }
}
